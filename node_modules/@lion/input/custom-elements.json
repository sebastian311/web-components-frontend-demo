{
  "schemaVersion": "1.0.0",
  "readme": "",
  "modules": [
    {
      "kind": "javascript-module",
      "path": "index.d.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "LionInput",
          "declaration": {
            "name": "LionInput",
            "module": "\"./src/LionInput.js\""
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "index.js",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "LionInput",
          "declaration": {
            "name": "LionInput",
            "module": "./src/LionInput.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "lion-input.d.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "lion-input.js",
      "declarations": [],
      "exports": [
        {
          "kind": "custom-element-definition",
          "name": "lion-input",
          "declaration": {
            "name": "LionInput",
            "module": "/src/LionInput.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/LionInput.d.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "LionInput: extension of lion-field with native input element in place and user friendly API.",
          "name": "LionInput",
          "members": [
            {
              "kind": "field",
              "name": "type",
              "type": {
                "text": "string"
              }
            },
            {
              "kind": "field",
              "name": "placeholder",
              "type": {
                "text": "string"
              }
            },
            {
              "kind": "field",
              "name": "__delegateReadOnly",
              "privacy": "private"
            }
          ],
          "superclass": {
            "name": "LionInput_base",
            "module": "src/LionInput.d.ts"
          },
          "tagName": "lion-input",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "LionInput",
          "declaration": {
            "name": "LionInput",
            "module": "src/LionInput.d.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/LionInput.js",
      "declarations": [
        {
          "kind": "class",
          "description": "LionInput: extension of lion-field with native input element in place and user friendly API.",
          "name": "LionInput",
          "members": [
            {
              "kind": "field",
              "name": "slots"
            },
            {
              "kind": "field",
              "name": "_inputNode",
              "type": {
                "text": "HTMLInputElement"
              },
              "privacy": "protected"
            },
            {
              "kind": "method",
              "name": "__delegateReadOnly",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "readOnly",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "privacy": "public",
              "description": "A Boolean attribute which, if present, indicates that the user should not be able to edit\nthe value of the input. The difference between disabled and readonly is that read-only\ncontrols can still function, whereas disabled controls generally do not function as\ncontrols until they are enabled.\n\n(From: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#attr-readonly)",
              "attribute": "readonly",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "type",
              "type": {
                "text": "string"
              },
              "default": "'text'",
              "privacy": "public",
              "attribute": "type",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "placeholder",
              "type": {
                "text": "string"
              },
              "default": "''",
              "privacy": "public",
              "attribute": "placeholder",
              "reflects": true
            }
          ],
          "attributes": [
            {
              "name": "readonly",
              "description": "A Boolean attribute which, if present, indicates that the user should not be able to edit\nthe value of the input. The difference between disabled and readonly is that read-only\ncontrols can still function, whereas disabled controls generally do not function as\ncontrols until they are enabled.\n\n(From: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#attr-readonly)",
              "fieldName": "readOnly"
            },
            {
              "name": "type",
              "fieldName": "type"
            },
            {
              "name": "placeholder",
              "fieldName": "placeholder"
            }
          ],
          "mixins": [
            {
              "name": "NativeTextFieldMixin",
              "package": "@lion/form-core"
            }
          ],
          "superclass": {
            "name": "LionField",
            "package": "@lion/form-core"
          },
          "tagName": "lion-input",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "LionInput",
          "declaration": {
            "name": "LionInput",
            "module": "src/LionInput.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "test/input-integrations.test.d.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "test/lion-input-integrations.test.d.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "test/lion-input.test.d.ts",
      "declarations": [],
      "exports": []
    }
  ]
}
